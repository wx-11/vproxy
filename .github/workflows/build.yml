name: 打包

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: Linux
    steps:
      - uses: actions/checkout@v3

      - name: Install depends
        run: |
          sudo apt update && sudo apt install upx rename -y

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Tag Check
        run: |
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
          if [ -z "${{ steps.tag.outputs.tag }}" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "tag=latest" >> $GITHUB_ENV
          fi

      - name: Style check
        run: cargo fmt --all -- --check

      - name: Clippy check
        run: cargo clippy --all-targets

      - name: Linux build
        run: |
          docker run --rm -t -v $(pwd):/build -w /build -e tag=$tag ghcr.io/wx-11/cargo-zigbuild -c "os=linux ./.github/build.sh"

      - name: MacOS build
        run: |
          docker run --rm -t -v $(pwd):/build -w /build -e tag=$tag ghcr.io/wx-11/cargo-zigbuild -c "os=macos ./.github/build.sh"

      - name: Windows build
        shell: bash
        run: |
          docker run --rm -t -v $(pwd):/build -w /build -e tag=$tag ghcr.io/wx-11/cargo-zigbuild -c "os=windows ./.github/build.sh"
          
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.CR_PAT }}
          files: |
            bin/*
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true

  crates:
    name: Publish crates
    runs-on: ubuntu-latest
    environment: Linux
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Tag Check
        run: |
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV
          echo "tag=${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
          if [ -z "${{ steps.tag.outputs.tag }}" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "tag=latest" >> $GITHUB_ENV
          fi

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true

  docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: ["build", "crates"]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
